<head>
   <ws:if data="{{ !wasServerSide }}">
      <title class="head-title-tag head-server-block" data-vdomignore="true">{{ _options.title }}</title>
      <ws:if data="{{_options.noscript}}">
         <noscript>
            <meta http-equiv="refresh" data-vdomignore="true" content="2; URL={{_options.noscript}}"/>
         </noscript>
      </ws:if>
      <meta data-vdomignore="true" http-equiv="X-UA-Compatible" content="IE=edge"/>
      <meta name="viewport" data-vdomignore="true" content="{{_options.viewport || 'width=1024'}}"/>
      <meta charset="utf-8" data-vdomignore="true"/>
   </ws:if>
   <!--   wsConfig нет смысла рендерить на клиенте. -->
   <!--   Он обязательно должен прийти с сервера.-->
   <!--   Потому что необходим для загрузки ресурсов.-->
   <ws:if data="{{ isSSR }}">
      <script data-vdomignore="true">
         window.wsConfig = {
            wsRoot: '{{_options.wsRoot}}',
            resourceRoot: '{{_options.resourceRoot}}',
            appRoot: '{{_options.appRoot}}',
            RUMEnabled: '{{ _options.RUMEnabled }}',
            pageName: '{{ _options.pageName }}',
            userConfigSupport: true,
            staticDomains: {{ __setHTMLUnsafe(staticDomainsstringified) }},
         defaultServiceUrl: '{{_options.servicesPath}}',
            compatible: {{ _options.compat }},
         product: '{{ _options.product }}'
         };
         window.buildnumber = '{{ _options.buildnumber }}';
         {{__setHTMLUnsafe(_options.preInitScript)}}
      </script>
   </ws:if>
   <ws:if data="{{ !wasServerSide }}">
      <ws:if data="{{!_options.compat}}">
         <script data-vdomignore="true">
            window.themesActive = true;
         </script>
      </ws:if>
   </ws:if>

   <ws:if data="{{ head }}">
      <ws:if data="{{ isArray(head) }}">
         <ws:for data="i in head">
            <ws:partial template="{{ i }}"  attr:data-vdomignore="true" attr:class="head-custom-block"/>
         </ws:for>
      </ws:if>
      <ws:else>
         <ws:partial template="{{ head }}"  attr:data-vdomignore="true" attr:class="head-custom-block"/>
      </ws:else>
   </ws:if>
   <ws:if data="{{ headContent }}">
      <ws:if data="{{ isArray(headContent) }}">
         <ws:for data="i in headContent">
            <ws:partial template="{{ i }}"  attr:data-vdomignore="true" attr:class="head-custom-block"/>
         </ws:for>
      </ws:if>
      <ws:else>
         <ws:partial template="{{ headContent }}"  attr:data-vdomignore="true" attr:class="head-custom-block"/>
      </ws:else>
   </ws:if>

   <ws:if data="{{ _options.preLoadCss }}">
      <ws:for data="index, value in themedCss">
         <ws:if data="{{_options.theme}}">
            <link rel="stylesheet" class="css-bundles" data-vdomignore="true"
                  css-name="{{value}}"
                  href="{{ _options.linkResolver.resolveCssWithTheme(value, _options.theme) }}"
                  type="text/css"
                  key="{{ 'themed-css-' + index }}"/>
            <!-- TODO Remove keys. Fix ThemesController.  -->
         </ws:if>
         <ws:else>
            <link rel="stylesheet" class="css-bundles" data-vdomignore="true" css-name="{{value}}"
                  href="{{ _options.linkResolver.resolveLink(value, 'css') }}"
                  type="text/css" key="{{ 'themed-css-' + index }}"/>
         </ws:else>
      </ws:for>
      <ws:for data="index, value in simpleCss">
         <link rel="stylesheet" class="css-bundles" data-vdomignore="true" css-name="{{value}}"
               href="{{ _options.linkResolver.resolveLink(value, 'css') }}"
               type="text/css" key="{{ 'simple-css-' + index }}"/>
      </ws:for>

      <ws:for data="themeName, themedCss in newThemed">
         <ws:for data="cssName, value in themedCss">
            <link rel="stylesheet" class="new-styles" data-vdomignore="true"
                  css-name="{{cssName}}"
                  href="{{ _options.linkResolver.resolveCssWithTheme(cssName, themeName) }}"
                  type="text/css"
                  theme-name="{{ themeName }}"/>
         </ws:for>
      </ws:for>
      <ws:for data="cssName, value in newSimple">
         <link rel="stylesheet" class="new-styles" data-vdomignore="true" css-name="{{ cssName }}"
               href="{{ _options.linkResolver.resolveLink(cssName, 'css') }}" type="text/css"/>
      </ws:for>
   </ws:if>
</head>
