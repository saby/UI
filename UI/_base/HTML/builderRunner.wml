﻿<div>
   <script>
      window.receivedStates = '{"ThemesController": { "themes" : {"' + (window.defaultStaticTheme || 'default') + '": true}}}';

      require([
            'UI/Base',
            'Application/Initializer',
            'Application/Env',
	        'SbisEnvUI/Compatible',
            'UI/Executor',
            'Application/State',
            'UI/State',
            'SbisEnvUI/Wasaby'
         ], function (UI, AppInitializer, AppEnv, Compatible, UIExecutor, AppState, UIState) {
         var AppData = UIState.AppData,
            headDataStore = UI.headDataStore,
            Core = UI.Control;
         /*Первый шаг - старт Application, иницализация core и темы. Второй шаг - загрузка ресурсов*/
         AppInitializer.default(window.wsConfig, new AppEnv.EnvBrowser(window['wsConfig']), new AppState.StateReceiver(UIState.Serializer));
         Compatible.AppInit();

         /* Этот же флаг проставляется в UI/Base:Document
         Проблема в том, что при старте html.tmpl-страницы на клиенте, не вызывается UI/Base:Document
         Это должно быть сведено в одну точку */
         headDataStore.write('isNewEnvironment', true);
         window.startContextData = {AppData: new AppData({})};
         require([ {{ __setHTMLUnsafe(_options.dependencies) }} ], function (){
            var templateFn = {{ __setHTMLUnsafe(_options.builder) }};
            templateFn.stable = true;
            var cnt = Core.extend({
               _template: templateFn
            });
            cnt.defaultProps = {
               notLoadThemes: true
            }
            Compatible.AppStart._shouldStart = false;
            Compatible.AppStart.createControl(cnt, {}, document.getElementById('root'));
         });
      });
   </script>
</div>
